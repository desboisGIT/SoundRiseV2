# Generated by Django 5.1.6 on 2025-02-10 10:44

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Veuillez entrer un email valide.')])),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3, message="Le nom d'utilisateur doit contenir au moins 3 caractères."), django.core.validators.RegexValidator('^[a-zA-Z0-9_.-]+$', "Le nom d'utilisateur ne peut contenir que des lettres, chiffres, points, tirets et underscores.")])),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(8, message='Le mot de passe doit contenir au moins 8 caractères.'), django.core.validators.RegexValidator('.*[A-Z]', 'Le mot de passe doit contenir au moins une lettre majuscule.'), django.core.validators.RegexValidator('.*[a-z]', 'Le mot de passe doit contenir au moins une lettre minuscule.'), django.core.validators.RegexValidator('.*\\d', 'Le mot de passe doit contenir au moins un chiffre.'), django.core.validators.RegexValidator('.*[@$!%*?&]', 'Le mot de passe doit contenir au moins un caractère spécial (@$!%*?&).')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
